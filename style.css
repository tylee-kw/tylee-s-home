@import url('https://fonts.googleapis.com/css2?family=Kdam+Thmor+Pro&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Kdam+Thmor+Pro&family=Nunito&display=swap');

/* 모든 요소에 대해서 지정할 때 사용 */
/* class 요소에 대해 지정할때는 ".class_name" 사용 */
/* id 요소에 대해 지정할 때는 "#id_name" 사용 */
 
* {
  margin: 0;
  box-sizing: border-box;
  list-style-type: none;
  text-decoration: none;
  color: #30333b;
}

body {
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  font-family: "Spoqa Han Sans Neo", "sans-serif";
}

header {
  background-image: url("imgs/color_blue.png"); /*헤더에 색갈 넣기*/
  padding: 0 60px; /*상하0, 좌우 60*/
  font-family: 'Kdam Thmor Pro', sans-serif;
  width: 100%;
  height: 140px;
  /* max-width: 1200px; */
  /* display 속성을 flex로 설정하면 기본적으로 자식 요소들이 나란히 정렬되며 박스 사이 간격 조절이나 정렬 위치를 바꾸는 것이 쉬워짐 */
  display: flex;  /* 가로방향 배치 ,width만큼만 차지 */
  justify-content: space-between; /* 가로축에서 자식요소들을 양끝에 배치하고 가운데는 균등한 간격을 두겠다. */
  align-items: center; /* 세로(vertical)정렬. 이거 하위속성에 개별적인 속성을 주려면 align_self를 사용하면 된다. stretch, center, flex_start, flex_end, baseline등이 있다. */
  position: fixed;
  top: 0;
  /* position tag 사용법 */
  /* 속성을 relative로 지정하면, top:, left: 등으로 위치를 지정하면 해당 요소를 지정한 만큼씩 원래 위치에서 이동시켜서 배치할 수 있다. */
  /* 속성을 absolute로 지정하면, 해당 요소는 배치 기준을 자신이 아닌 상위 요소에서 찾는다. 즉, DOM트리를 따라 올라가다가 position 속성이 static이 아닌 첫번째 상위 요소가 해당 요소의 배치 기준으로 설정된다. 만약 해당 요소 상위에 positon 속성이 static이 아닌 요소가 없다면, DOM트리 최상위에 있는 <body>요소가 배치 기준이 된다. */

  /* 하지만 보통 이 복잡한 알고리즘을 활용하는 경우는 드물다. 대부분의 경우 부모요소(가장 가까운 상위요소)를 기준으로 relative특성을 활용해 top,left,right,bottom 특성을 적용해야 하기 때문이다. 즉, 어떤 요소의 position속성을 absolute로 설정하면, 부모요소의 position속성을 relative로 지정하는 것이 관례이다. */
}

/*TaeYeon introduction 글씨 크기*/
.logo {
  font-size: 30px;
  letter-spacing: 0.1em;
  text-decoration: none;
  color: #000000;
}

/*navigation tag로 다른 웹페이로 연결하거나 현재 웹페이지의 콘텐츠 내부로 연결되는 링크가 있는 영역을 나타낼 때 사용*/
nav {
  width: 380px;
  transform: translateX(-45px);
}

nav ul {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: 20px;
  letter-spacing: 0.1em;
}

nav ul li a {
  text-decoration: none;
  color: #000000;
  padding: 0 5px;
}

/*마우스 올라가면 색 변하기*/
nav ul li a:hover {
  font-weight: 800;
  color: #FF0000;
}


section {
  width: 100%;
  max-width: 1300px;
}

/* home */

.home__text.eng {
  /* position: relative; */
  padding-bottom: 5%;
}

.home__text.kor {
  padding-bottom: 4%;
}

.home {
  height: 100vh; /* veiwport. 현재 보이는 창 높이의 100%라는 뜻으로 이 컨테이너는 화면 전체 높이를 차지하게 됨 */
  margin-top: 40px;
  display: flex; /* 자식요소 3개를 나란히 배치한다.(eng부분, 사진부분, kor부분) */
  justify-content: center; /* 가로축 방향에서 아이템들을 가운데 정렬 */
  align-items: center; /* 세로축 방향에서 아이템들을 가운데 정렬 */
}

.home__picture {
  width: 388px;
  height: 288px;
  border-radius: 15px;
  margin: 0 30px;
}

/* ".home__text"라고만 적어도 class="home__text eng"도, class="home__text kor"도 모두 선택된다. */
.home__text {
  font-family: 'Nunito', sans-serif;
  /*Nunito폰트를 우선 사용하고 없으면 sans_serif폰트로 넘어간다*/
  width: 100%;
  height: 100%; 
  text-align: center;
  cursor: initial; /*마우스 포인터를 기본 커서로 사용한다(바껴있다면 원래대로 되돌리는 효과)*/
  display: flex; /*자식요소를 flex컨테이너로 전환(유연한 배치)*/
  flex-direction: column; /*flex아이템을 세로 방향으로 쌓아올린다*/
  justify-content: center; /*주축을 기준으로 아이템들을 가운데 배치한다(위에서 세로방향으로 정렬했으니 여기서는 세로축을 기준으로 가운데 정렬함)*/
  align-items: center; /*교차축을 기준으로 가운데 정렬(여기서는 세로가 기준이므로 가로축으로 정렬함(근데 이미 .home에서 display: flex에 align-items: center로 정렬했으므로 정렬할 필요가 없긴함)*/
}

.home__text p {
  margin-bottom: 17px;
  font-size: 18px;
  color: #30333b;
}

/* 이동 지정자를 걸어놓은 부분은 배경색 지정 */
/* home_text 클라스 밑에 p태그 밑에 span태그를 가진 부분에만 적용 */
.home__text p span {
  background-color: #779cdf;
  padding: 0 3px;
  font-weight: 500;
}

/*부모요소의 background color를 그대로 상속하므로 부모님 p태그의 배경색인 none을 가져온다. 주로 hover, active 상태일 때 배경을 부모와 일치시키고 싶을 때 사용. */ 
.home__text p span:hover {
  color: #f0142e;
  background-color: inherit;
}

/* about */
.about {
  border-top: 2px solid #cacaca;
}
.about h1 {
  margin-top: 15px;
}

/* about tennis */
/* about game */
.about__major,
.about__tennis,
.about__game,
.about__everyone {
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  border-bottom: 2px solid #cacaca; /*맨밑 윤곽선*/
}

.about__major img {
  width: 350px;
  border-radius: 10px;
  margin: 0 15px;
  /* margin-right: 15px;
  margin-left: 15px; */
  width: 28vw;
}

.about__tennis img
{
  border-radius: 10px;
  margin: 0 15px;
  /* margin-right: 15px;
  margin-left: 15px; */
  width: 28vw;
}

.about__game img{
  border-radius: 10px;
  margin: 0 15px;
  /* margin-right: 15px;
  margin-left: 15px; */
  width: 40vw;
}

.about__everyone img{
  border-radius: 10px;
  margin: 0 15px;
  width: 20vw;
}

.about__ttable{
  width: 100%;
  height: 50vh;
  display: flex;
  justify-content: center;
  align-items: center;
  border-bottom: 2px solid #cacaca; /*맨밑 윤곽선*/
}

/*capion과 밑의 내용을 구분하기 위해서 여백 두기 위해서 작성*/
.about__ttable table caption {
  margin-bottom: 20px;
}

/*table내에서 간격을 띄워놓기 위해선 아래 두 코드 사용*/
.about__ttable table {
  border-collapse: separate;
  border-spacing: 20px 5px; /* 가로 20px, 세로 10px 간격 */
}

/*table에서 colum명 왼쪽 정렬. (원래 table scope="col"의 default값은 가운데정렬임)*/
.about__ttable table thead tr th {
  text-align: left;
  color: #949497;
}

/* footer */
footer {
  width: 100%;
  background-color: #f5f5f5;
  height: 200px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

footer ul {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

footer ul li p,
footer ul li a,
footer ul li form {
  margin-bottom: 5px;
  font-size: 13px;
  color: #949497;
}